shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
Loan_data <- read.csv("./Data/LoanData.csv")
Loan_data <- read.csv("./Data/LoanData.csv")
Loan_data
head(Loan_data,5)
attach(Loan_data)
str(Loan_data)
Scatterplott <- ggplot(data=Loan_data, aes(x=Loan_Amount, y=Applicant_Income, col=Education))+geom_point(size=3)+xlab("Loan Amount")+ylab("Applicant Income")+ggtitle("Relationship between Loan Amount and Applicant Income")
Scatterplot
Scatterplot <- ggplot(data=Loan_data, aes(x=Loan_Amount, y=Applicant_Income, col=Education))+geom_point(size=3)+xlab("Loan Amount")+ylab("Applicant Income")+ggtitle("Relationship between Loan Amount and Applicant Income")
Scatterplot
Scatterplot <- ggplot(data=Loan_data, aes(x=Loan_Amount, y=Applicant_Income))+geom_point(aes(shape = Education),size = 3)+xlab("Loan Amount")+ylab("Applicant Income")+ggtitle("Relationship between Loan Amount and Applicant Income")
Scatterplot
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = Loan_data, aes(x = Applicant_Income, y = Loan_Amount)) +
geom_point(aes(shape = Education),size = 3) +
xlab("Applicant Income") +
ylab("Loan Amount") +
ggtitle("Applicant Income vs Loan Amount")
Scatterplot <- ggplot(data=Loan_data, aes(x=Applicant_Income, y=Loan_Amount))+geom_point(aes(shape = Education),size = 3)+xlab("Applicant Income")+ylab("Loan Amount")+ggtitle("Relationship between Loan Amount and Applicant Income")
Scatterplot
summary(Loan_data)
Loan_data$Property_Area <- as.factor(Property_Area)
Loan_data$Property_Area
Loan_data$Property_Area <- as.factor(Property_Area)
str(Loan_data)
boxplot<-ggplot(Loan_data,aes(x=Property_Area, y=Loan_Amount))+geom_boxplot()+scale_x_discrete(name="property area")+scale_y_continuous(name="loan amount",  breaks = seq(0,30,5), limits=c(0,500))+ggtitle("Box plot of Loan amount vs Property area")
boxplot
ggplot(data = Loan_data, aes(x = Property_Area,y = Loan_Amount)) +
geom_boxplot() +
xlab("Property Area") +
scale_y_continuous(name = "Loan Amount",limits = c(0,500),breaks = seq(0,500,50))
boxplot<-ggplot(Loan_data,aes(x=Property_Area, y=Loan_Amount))+geom_boxplot()+scale_x_discrete(name="property area")+scale_y_continuous(name="loan amount",  breaks = seq(0,500,50), limits=c(0,500))+ggtitle("Box plot of Loan amount vs Property area")
boxplot
library(ggplot2) # load the package
# Basic Histogram
ggplot(msleep, aes(x=sleep_total)) + geom_histogram()
# Change line color and fill colour
ggplot(msleep, aes(x=sleep_total)) + geom_histogram(color="black",fill="light blue",
binwidth=1)
# Change the width of bins
ggplot(msleep, aes(x=sleep_total)) + geom_histogram(color="black",fill="light blue",
binwidth=1)
ggplot(msleep, aes(x=sleep_total)) + geom_histogram(color="black",fill="light blue",
binwidth=5)
ggplot(msleep, aes(x=sleep_total)) + geom_histogram(color="black",fill="light blue",
bins=10)
ggplot(msleep, aes(x=sleep_total)) + geom_histogram(color="black",fill="light blue",
bins=20)
# Change line type
ggplot(msleep, aes(x=sleep_total)) + geom_histogram(color="black", fill="white",
linetype="dashed", binwidth=1)
sd <- read.csv("./Data/sales_data.csv")
attach(sd)
head(sd,3)
sd <- read.csv("./Data/sales_data.csv")
attach(sd)
head(sd)
summary(sd)
total_sales <- function(sd){
total <- colSums(sd[,c("Product_A","Product_B")])
}
sales_data <- read.csv("./Data/sales_data.csv")
attach(sales_data)
head(sales_data)
total_sales <- function(data){
Totals <- colSums(data[,c("Product_A","Product_B")])
results <- data.frame(Product = c("Product A","Product B"), Total_sales = Totals)
return(results)
}
total_sales <- function(data){
Totals <- colSums(data[,c("Product_A","Product_B")])
results <- data.frame(Product = c("Product A","Product B"), Total_sales = Totals)
return(results)
}
total_sales(sales_data)
total_sales <- function(sd){
total <- colSums(sd[,c("Product_A","Product_B")])
return(total)
}
total_sales(sd)
total_sales <- function(sd){
total <- colSums(sd[,c("Product_A","Product_B")])
result <- data.frame(product = c("Product_A","Product_B"),tatal = "total_ssales")
return(result)
}
total_sales(sd)
total_sales <- function(sd){
total <- colSums(sd[,c("Product_A","Product_B")])
result <- data.frame(product = c("Product_A","Product_B"),total = "total_ssales")
return(result)
}
total_sales(sd)
total_sales <- function(sd){
total <- colSums(sd[,c("Product_A","Product_B")])
result <- data.frame(product = c("Product_A","Product_B"),total_ssales = "total")
return(result)
}
total_sales(sd)
total_sales <- function(sd){
total <- colSums(sd[,c("Product_A","Product_B")])
result <- data.frame(Product=c("Product_A","Product_B"),Total_ssales = "total")
return(result)
}
total_sales(sd)
total_sales <- function(sd){
total <- colSums(sd[,c("Product_A","Product_B")])
result <- data.frame(Product=c("Product_A","Product_B"),Total_sales = "total")
return(result)
}
total_sales(sd)
total_sales <- function(sd){
total <- colSums(sd[,c("Product_A","Product_B")])
result <- data.frame(Product=c("Product_A","Product_B"),Total_sales = total)
return(result)
}
total_sales(sd)
average_sales <- function(sd){
average <- colMeans(sd[,c("Product_A","Product_B")])
result <- data.frame(Product = c("Product_A","Product_B"),Average_Sales = average)
return(result)
}
average_sales(sd)
average_sales <- function(data){
averages <- colMeans(data[,c("Product_A","Product_B")])
average_sales <- data.frame(Product = c("Product A","Product B"), Average_Sales = averages)
return(average_sales)
}
average_sales <- function(data){
averages <- colMeans(data[,c("Product_A","Product_B")])
average_sales <- data.frame(Product = c("Product A","Product B"), Average_Sales = averages)
return(average_sales)
}
average_sales(sales_data)
total_sales(sales_data)
